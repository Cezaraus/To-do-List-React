{"version":3,"sources":["components/Todo.js","components/Form.js","components/FilterButton.js","components/Home.js","components/About.js","components/Navbar.js","components/Error.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","props","useState","isEditing","setEditing","wasEditing","value","ref","useRef","useEffect","current","usePrevious","newName","setNewName","editFieldRef","editButtonRef","isImportant","setImportant","editingTemplate","className","onSubmit","e","preventDefault","editTask","id","htmlFor","name","type","onChange","target","onClick","viewTemplate","defaultChecked","completed","toggleTaskCompleted","deleteTask","focus","Form","setName","addTask","autoComplete","localStorage","clear","setTasks","FilterButton","isPressed","setFilter","FILTER_MAP","All","Active","task","Completed","FILTER_NAMES","Object","keys","App","filter","editedTaskList","tasks","map","remainingTasks","updatedTasks","data","getItem","JSON","parse","setItem","stringify","taskList","filterList","tasksNoun","lenth","headingText","length","listHeadingRef","prevTaskLength","newTask","nanoid","tabIndex","About","Navbar","href","Error","path","component","Home","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8177f18a.chunk.js","sourcesContent":["import React, {useState, useRef, useEffect} from \"react\";\r\n\r\nfunction usePrevious(value){\r\n  const ref=useRef();\r\n  useEffect(() => {\r\n    ref.current=value;\r\n  });\r\n  return ref.current;\r\n}\r\n\r\nexport default function Todo(props){\r\n  \r\n  const [isEditing, setEditing] = useState(false);\r\n  const wasEditing=usePrevious(isEditing);\r\n  const [newName, setNewName] = useState('');\r\n  const editFieldRef = useRef(null);\r\n  const editButtonRef = useRef(null);\r\n  const [isImportant, setImportant] = useState(false);\r\n\r\n  function handleChange(e){\r\n    setNewName(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e){\r\n    e.preventDefault();\r\n    props.editTask(props.id, newName);\r\n    setNewName(\"\");\r\n    setEditing(false);\r\n  }\r\n\r\n  const editingTemplate = (\r\n    <form className=\"stack-small\" onSubmit={handleSubmit}>\r\n      <div className=\"form-group\">\r\n        <label className=\"todo-label\" htmlFor={props.id}>\r\n          New name for {props.name}\r\n        </label>\r\n        <input id={props.id}\r\n          className=\"todo-text\" \r\n          type=\"text\" \r\n          value={newName}\r\n          onChange={handleChange}\r\n          ref={editFieldRef}\r\n          />\r\n      </div>\r\n      <div className=\"btn-group\">\r\n        <button type=\"button\" className=\"btn todo-cancel\" onClick={() => setEditing(false)}>\r\n          Cancel\r\n          <span className=\"visually-hidden\">renaming {props.name}</span>\r\n        </button>\r\n        <button type=\"submit\" className=\"btn btn__primary todo-edit\">\r\n          Save\r\n          <span className=\"visually-hidden\">new name for {props.name}</span>\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n  const viewTemplate = (\r\n    <div className=\"stack-small\">\r\n      <div className={isImportant ? \"c-cb cb-important\" : \"c-cb\"}>\r\n          <input\r\n            id={props.id}\r\n            type=\"checkbox\"\r\n            defaultChecked={props.completed}\r\n            onChange={() => props.toggleTaskCompleted(props.id)}\r\n          />\r\n          <label className=\"todo-label\" htmlFor={props.id}>\r\n            {props.name}\r\n          </label>\r\n        </div>\r\n        <div className=\"btn-group\">\r\n          <button \r\n            type=\"button\" \r\n            className=\"btn\" \r\n            onClick={() => setEditing(true)}\r\n            ref={editButtonRef}  \r\n          >\r\n            Edit <span className=\"visually-hidden\">{props.name}</span>\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn__danger\"\r\n            onClick={() => props.deleteTask(props.id)}\r\n          >\r\n            Delete <span className=\"visually-hidden\">{props.name}</span>\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn\"\r\n            onClick={() => setImportant(!isImportant)}\r\n          >\r\n            Important <span className=\"visually-hidden\">{props.name}</span>\r\n          </button>\r\n        </div>\r\n    </div>\r\n  );\r\n\r\n    useEffect(() =>{\r\n      if(!wasEditing && isEditing){\r\n        editFieldRef.current.focus();\r\n      }\r\n      if(wasEditing && !isEditing){\r\n        editButtonRef.current.focus();\r\n      }\r\n      \r\n    }, [wasEditing, isEditing]);\r\n\r\n  return <li className=\"todo\">{isEditing ? editingTemplate : viewTemplate}</li>;\r\n}","import React, {useState} from 'react';\r\n\r\nfunction Form(props){\r\n  \r\n  const [name, setName] = useState('')\r\n\r\n  function handleChange(e) {\r\n    setName(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e){\r\n    e.preventDefault();\r\n    if(name){\r\n      props.addTask(name);\r\n      setName(\"\");\r\n    }\r\n  }\r\n\r\n  function handleClear(){\r\n    localStorage.clear();\r\n    props.setTasks([]);\r\n  }\r\n\r\n    return(\r\n      <form onSubmit={handleSubmit}> \r\n        <h2 className=\"label-wrapper\">\r\n          <label htmlFor=\"new-todo-input\" className=\"label__lg\">\r\n            What needs to be done?\r\n          </label>\r\n        </h2>\r\n        <input\r\n          type=\"text\"\r\n          id=\"new-todo-input\"\r\n          className=\"input input__lg\"\r\n          name=\"text\"\r\n          autoComplete=\"off\"\r\n          value={name}\r\n          onChange={handleChange}\r\n        />\r\n        <button type=\"submit\" className=\"btn btn__primary btn__lg\">\r\n          Add\r\n        </button>\r\n        <button onClick={handleClear} className=\"btn btn__lg btn__danger\">\r\n          Clear\r\n        </button>\r\n      </form>\r\n    );\r\n}\r\n\r\n\r\nexport default Form;","import React from 'react'\r\n\r\nfunction FilterButton(props){\r\n    return (\r\n        <button type=\"button\" \r\n          className=\"btn toggle-btn\" \r\n          aria-pressed={props.isPressed} \r\n          onClick={()=> props.setFilter(props.name)}>\r\n        <span className=\"visually-hidden\">Show </span>\r\n        <span>{props.name}</span>\r\n        <span className=\"visually-hidden\"> tasks</span>\r\n      </button>\r\n    );\r\n}\r\n\r\nexport default FilterButton;\r\n","import React, {useState, useRef, useEffect} from 'react';\r\nimport {nanoid} from \"nanoid\";\r\nimport Todo from \"./Todo\";\r\nimport Form from \"./Form\";\r\nimport FilterButton from \"./FilterButton\";\r\n\r\nconst FILTER_MAP={\r\n  All: () => true,\r\n  Active: task => !task.completed,\r\n  Completed: task => task.completed\r\n}\r\n\r\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\r\n\r\nfunction usePrevious(value){\r\n  const ref = useRef();\r\n  useEffect(() => {\r\n    ref.current=value;\r\n  });\r\n  return ref.current;\r\n}\r\n\r\nfunction App(props) {\r\n\r\n  const [filter, setFilter] = useState('All');\r\n\r\n  function editTask(id, newName){\r\n    const editedTaskList = tasks.map(task =>{\r\n      if(id === task.id){\r\n        return {...task, name: newName}\r\n      }\r\n      return task;\r\n    });\r\n    setTasks(editedTaskList);\r\n  }\r\n\r\n  function deleteTask(id){\r\n    const remainingTasks = tasks.filter(task => id !==task.id);\r\n    setTasks(remainingTasks);\r\n  }\r\n\r\n  const [tasks,setTasks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const data = localStorage.getItem('listOfTasks');\r\n    if(data){\r\n      setTasks(JSON.parse(data));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('listOfTasks', JSON.stringify(tasks));\r\n  }, [tasks])\r\n\r\n  function addTask(name){\r\n    const newTask = {id: \"todo-\"+ nanoid(), name: name, completed: false};\r\n    setTasks([...tasks, newTask]);\r\n  }\r\n\r\n  function toggleTaskCompleted(id) {\r\n    const updatedTasks=tasks.map(task => {\r\n      if (id===task.id) {\r\n        return {...task, completed: !task.completed}\r\n      }\r\n      return task;\r\n    });\r\n    setTasks(updatedTasks);\r\n  } \r\n\r\n  const taskList = tasks.filter(FILTER_MAP[filter]).map(task => \r\n    <Todo \r\n      id={task.id} \r\n      completed={task.completed} \r\n      name={task.name} \r\n      key={task.id}\r\n      toggleTaskCompleted={toggleTaskCompleted}\r\n      deleteTask={deleteTask}\r\n      editTask={editTask}\r\n      />\r\n  );\r\n\r\n    const filterList = FILTER_NAMES.map(name => (\r\n      <FilterButton \r\n      key={name} \r\n      name={name}\r\n      isPressed = {name === filter}\r\n      setFilter={setFilter}\r\n      />\r\n    ));\r\n\r\n  const tasksNoun = taskList.lenth !==1? 'tasks' : 'task';\r\n  const headingText = `${taskList.length} ${tasksNoun} tasks remaining`;\r\n  const listHeadingRef = useRef(null);\r\n  const prevTaskLength=usePrevious(tasks.length);\r\n\r\n  useEffect(() => {\r\n    if(tasks.length - prevTaskLength === -1){\r\n      listHeadingRef.current.focus();\r\n    }\r\n  }, [tasks.length, prevTaskLength]);\r\n\r\n\r\n  return (\r\n    <div className=\"todoapp stack-large\">\r\n      <h1>TodoMatic</h1>\r\n      <Form addTask={addTask} setTasks={setTasks}/>\r\n      <div className=\"filters btn-group stack-exception\">\r\n        {filterList}\r\n      </div>\r\n      <h2 id=\"list-heading\" tabIndex=\"-1\" ref={listHeadingRef}>\r\n        {headingText}\r\n      </h2>\r\n      <ul\r\n        //role=\"list\"\r\n        className=\"todo-list stack-large stack-exception\"\r\n        aria-labelledby=\"list-heading\"\r\n      >\r\n        {taskList}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\n\r\nfunction About(){\r\n    return(\r\n        <div className=\"todoapp stack-large\">\r\n            <h1> The About Page </h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;\r\n","import React from 'react';\r\n\r\nfunction Navbar(){\r\n    return(\r\n        <navbar>\r\n            <a href=\"../\"> Home Page</a>\r\n            \r\n            <a href=\"About\"> About Page</a>\r\n        </navbar>\r\n    );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\n\r\nfunction Error(){\r\n    return(\r\n        <div className=\"todoapp stack-large\">\r\n            <h1> Oops! Page not found! </h1>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Error;\r\n","import React from 'react';\r\nimport {Route, Switch} from 'react-router-dom';\r\n\r\nimport Home from './components/Home';\r\nimport About from './components/About';\r\nimport Navbar from './components/Navbar';\r\nimport Error from './components/Error';\r\n\r\n\r\nfunction App(props){\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <Switch>\r\n        <Route path='/' component={Home} exact/>\r\n        <Route path='/about' component={About} exact/>\r\n        <Route component={Error}/>\r\n        </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}